# azure-pipelines.yml

trigger:
- main # Define que o pipeline será executado a cada push no branch 'main'

pool:
  name: 'Default' # Assumindo que seu agente EJAC está no pool 'Default'
  demands: 
  - agent.name -equals EJAC # Garante que apenas o seu agente específico (EJAC) seja usado

variables:
  # Caminho para o arquivo .sln da sua solução
  # Ajuste 'APITempoDIO.sln' se o nome do seu arquivo de solução for diferente
  solution: '**/*.sln' 
  buildConfiguration: 'Release' # Configuração de build (Debug ou Release)

steps:
- task: UseDotNet@2
  displayName: 'Instalar .Net SDK'
  inputs:
    packageType: 'sdk'
    version: '8.x' 

- script: dotnet restore $(solution)
  displayName: 'Restaurar Solution'

- script: dotnet build $(solution) --configuration $(buildConfiguration)
  displayName: 'Build Solution'

- script: dotnet test $(solution) --configuration $(buildConfiguration) --no-build --collect "XPlat Code Coverage"
  displayName: 'Build Solution'

- task: Docker@2
  inputs:
    containerRegistry: 'acrapidemoemanoel'
    repository: 'api-dio-test'
    command: 'buildAndPush'
    Dockerfile: './apitempodio/APITempoDIO/Dockerfile'